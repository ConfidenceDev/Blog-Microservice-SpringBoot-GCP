node {
    def repourl = "${REGISTRY_URL}/${PROJECT_ID}/${ARTIFACT_REGISTRY}"
    def mvnHome = tool name: 'maven', type: 'maven'
    def mvnCMD = "${mvnHome}/bin/mvn "

    stage('Checkout'){
        checkout([$class: 'GitSCM',
            branches: [[name: '*/main']],
            extensions: [],
            userRemoteConfigs: [[credentials: 'git', 
            url: 'github_repo_url']]
        ])
    }
    
    stage('Build and Push Image'){
        withCredentials([file(credentialsId: 'gcp', variable: 'GC_KEY')]){
            sh("gcloud auth activate-service-account --key-file=${GC_KEY}")
            sh('gcloud auth configure-docker us-west-docker.pkg.dev')
            sh "${mvnCMD} clean install jib:build -DREPO_URL=${repourl}"
        }
    }

    stage('Deploy'){
        sh "sed -i 's|IMAGE_URL|${repourl}|g' k8s/deployment.yaml"
        step([
          $class: 'KubernetesEngineBuilder',
          projectId: env.PROJECT_ID,
          cluserName: env.CLUSTER,
          location: env.ZONE,
          manifestPattern: 'k8s/deployment.yaml',
          credentialsId: env.PROJECT_ID,
          verifyDeployments: true  
        ])
    }
}